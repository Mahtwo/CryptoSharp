<Window x:Class="CryptoSharp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CryptoSharp"
        mc:Ignorable="d"
        Title="CryptoSharp" Height="450" Width="800" Background="#1e1e1e">
    <Window.Style>
        <Style/>
    </Window.Style>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Cards List -->
        <DockPanel Grid.Column="0" Margin="10">
            <Label x:Name="labelCardsList" Content="Cards" HorizontalAlignment="Center" DockPanel.Dock="Top" Foreground="#FAFAFA"/>
            <ListBox x:Name="cardsList" DockPanel.Dock="Bottom" AllowDrop="True" DragEnter="CardsList_DragEnterOver" DragOver="CardsList_DragEnterOver" Drop="CardsList_Drop" Background="#1e1e1e" Foreground="#FAFAFA">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                                            Padding="{TemplateBinding Control.Padding}"
                                            BorderBrush="{TemplateBinding Border.BorderBrush}"
                                            Background="{TemplateBinding Panel.Background}"
                                            Name="Bd"
                                            SnapsToDevicePixels="True">       
                                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                <Condition Property="Selector.IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd" Value="Transparent"/>
                                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush></SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                <Condition Property="Selector.IsSelected" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Source={x:Static SystemParameters.WindowGlassBrush}}"/>
                                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush></SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </MultiTrigger>
                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                            <Setter Property="Panel.Background" TargetName="Bd" Value="{Binding Source={x:Static SystemParameters.WindowGlassBrush}}"/>
                                            <Setter Property="Border.BorderBrush" TargetName="Bd">
                                                <Setter.Value>
                                                    <SolidColorBrush></SolidColorBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                        <Trigger Property="UIElement.IsEnabled" Value="False">
                                            <Setter Property="TextElement.Foreground" TargetName="Bd">
                                                <Setter.Value>
                                                    <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListBox>
        </DockPanel>
        

        <!-- Encode Message -->
        <StackPanel Orientation="Vertical"  Grid.Column="1" Margin="40" VerticalAlignment="Center">
            <Label x:Name="labelEncodeMessage" Content="Encode Message" HorizontalAlignment="Center" Margin="0 0 0 5" Foreground="#FAFAFA"/>
            <TextBox x:Name="inputEncodeMessage" TextWrapping="Wrap" TextAlignment="Center" Margin="0 0 0 15" Padding="5" LostFocus="TextBox_LostFocus" GotFocus="TextBox_GotFocus" Foreground="Gray" Text="Enter your message to encode" Background="#3d3d3d" TextChanged="TextBox_TextChanged"/>
            <Button x:Name="buttonEncodeMessage" Content="Encode" Click="ButtonEncodeMessage_Click" Background="#3d3d3d" Foreground="#FAFAFA"/>
        </StackPanel>

        <!-- Decode Message -->
        <StackPanel Orientation="Vertical"  Grid.Column="2" Margin="40" VerticalAlignment="Center">
            <Label x:Name="labelDecodeMessage" Content="Decode Message" HorizontalAlignment="Center" Margin="0 0 0 5" Foreground="#FAFAFA"/>
            <TextBox x:Name="inputDecodeMessage" TextWrapping="Wrap" TextAlignment="Center" Margin="0 0 0 15" Padding="5" Foreground="Gray" Text="Enter your message to decode" GotFocus="TextBox_GotFocus" LostFocus="TextBox_LostFocus" Background="#424242" TextChanged="TextBox_TextChanged"/>
            <Button x:Name="buttonDecodeMessage" Content="Decode" Click="ButtonDecodeMessage_Click" Background="#3d3d3d" Foreground="#FAFAFA"/>
        </StackPanel>
    </Grid>
</Window>
